plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'

    // Firebase Crashlytics Gradle
    id 'com.google.firebase.crashlytics'

    // Google GMS Google Services Gradle Plugin
    id 'com.google.gms.google-services' apply false
}


// keystore.properties の読み取り
def keystoreProperties = new Properties()
try {
    keystoreProperties.load(new FileInputStream(rootProject.file('keystore.properties')))
} catch (e) {
}


android {
    namespace 'jp.co.yumemi.android.code_check'
    compileSdk 34

    defaultConfig {
        applicationId "jp.co.yumemi.android.codecheck"
        minSdk 23
        targetSdk 34
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        def file = rootProject.file('release.jks')
        if (file.exists()) {
            release {
                storeFile file
                storePassword System.getenv('KEYSTORE_PASSWORD')
                        ?: keystoreProperties.getProperty('KEYSTORE_PASSWORD', '')
                keyAlias System.getenv('KEY_ALIAS')
                        ?: keystoreProperties.getProperty('KEY_ALIAS', '')
                keyPassword System.getenv('KEY_PASSWORD')
                        ?: keystoreProperties.getProperty('KEY_PASSWORD', '')
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix = '.debug'
            versionNameSuffix = '.debug'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${libver.androidx.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${libver.androidx.espresso}"
    androidTestImplementation "androidx.test.ext:junit-ktx:${libver.androidx.junit}"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:${libver.androidx.uiautomator}"

    // Coil
    implementation 'io.coil-kt:coil:1.3.2'

    // Firebase
    releaseImplementation platform('com.google.firebase:firebase-bom:32.5.0')
    releaseImplementation("com.google.firebase:firebase-crashlytics")

    // JUnit
    testImplementation 'junit:junit:4.13.2'

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    // Ktor
    implementation 'io.ktor:ktor-client-android:1.6.4'

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'

    // Material Design
    implementation 'com.google.android.material:material:1.4.0'

    // Timber
    implementation "com.jakewharton.timber:timber:${libver.timber}"
}


// アプリバージョン名の表示
tasks.register('showVersionName') {
    def file = rootProject.file('./app/build/outputs/apk/release/output-metadata.json')
    def versionName = 'unknown'
    if (file.exists()) {
        def text = file.text.toString()
        def matches = (text =~ /"versionName": "(.+)",/)
        versionName = matches[0][1]
    }
    println(versionName)
}


// app/google-services.json がある場合のみセットアップ
if (rootProject.file('app/google-services.json').exists()) {
    apply plugin: 'com.google.gms.google-services'
}
